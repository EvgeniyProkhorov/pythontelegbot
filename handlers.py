from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackContext, CommandHandler, CallbackQueryHandler, ConversationHandler
from utils import get_available_cabins
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç—Ç–∞–ø–æ–≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
CHOOSE_ACTION, SELECT_CABIN, CONFIRM_SELECTION = range(3)

async def start(update: Update, context: CallbackContext) -> int:
    context.user_data['state'] = CHOOSE_ACTION
    logger.info("–§—É–Ω–∫—Ü–∏—è start –≤—ã–∑–≤–∞–Ω–∞")
    
    keyboard = [[InlineKeyboardButton("üè† –í—ã–±—Ä–∞—Ç—å –±—ã—Ç–æ–≤–∫—É –∏–∑ –Ω–∞–ª–∏—á–∏—è", callback_data='show_cabin')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=reply_markup)
    
    logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ CHOOSE_ACTION")
    return CHOOSE_ACTION

# async def show_cabins(update: Update, context: CallbackContext) -> int:
#     current_state = context.user_data.get('state')
#     logger.info(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
#     context.user_data['state'] = SELECT_CABIN

#     query = update.callback_query
#     await query.answer()

#     cabins = get_available_cabins()
#     for cabin in cabins:
#         keyboard = [[InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —ç—Ç—É –±—ã—Ç–æ–≤–∫—É", callback_data=f'select_{cabin["id"]}')]]
#         reply_markup = InlineKeyboardMarkup(keyboard)
#         await query.message.reply_photo(cabin['photo'], caption=cabin['description'], reply_markup=reply_markup)
    
#     logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ SELECT_CABIN")
#     return SELECT_CABIN
async def show_cabins(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    await query.answer()

    context.user_data['state'] = SELECT_CABIN
    context.user_data['cabin_messages'] = []  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π

    cabins = get_available_cabins()
    for cabin in cabins:
        keyboard = [[InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —ç—Ç—É –±—ã—Ç–æ–≤–∫—É", callback_data=f'select_{cabin["id"]}')]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        sent_message = await context.bot.send_photo(chat_id=update.effective_chat.id, photo=cabin['photo'], caption=cabin['description'], reply_markup=reply_markup)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        context.user_data['cabin_messages'].append(sent_message.message_id)

    logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ SELECT_CABIN")
    return SELECT_CABIN


async def confirm_cabin_selection(update: Update, context: CallbackContext) -> int:
    current_state = context.user_data.get('state')
    logger.info(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
    context.user_data['state'] = CONFIRM_SELECTION

    query = update.callback_query
    await query.answer()

    # –¢—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ –±—ã—Ç–æ–≤–∫–∏
    await query.edit_message_text(text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –±—ã—Ç–æ–≤–∫—É. –¢—É—Ç –º–æ–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏.")

    logger.info("–ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ CONFIRM_SELECTION")
    return CONFIRM_SELECTION

# async def cabin_details(update: Update, context: CallbackContext) -> None:
#     query = update.callback_query
#     await query.answer()

#     # –ü–æ–ª—É—á–∞–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–π –±—ã—Ç–æ–≤–∫–∏ –∏–∑ callback_data
#     selected_cabin_id = query.data.split('_')[1]
#     cabins = get_available_cabins()
#     selected_cabin = next((c for c in cabins if str(c['id']) == selected_cabin_id), None)

#     if selected_cabin:
#         keyboard = [
#             [InlineKeyboardButton("üì≤ –°–≤—è–∑–∞—Ç—å—Å—è –≤ Telegram", url="https://t.me/ivanov1111")],
#             [InlineKeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è –≤ WhatsApp", url="https://api.whatsapp.com/send?phone=79111781781")],
#             [InlineKeyboardButton("üåê –ü–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à —Å–∞–π—Ç", url="https://www.bytovki-1.ru/")],
#             [InlineKeyboardButton("üîµ –ü–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤ VK", url="https://vk.com/public210580591")],
#             [InlineKeyboardButton("üìû –ó–∞–∫–∞–∑–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫", callback_data='contact')]
#         ]
#         reply_markup = InlineKeyboardMarkup(keyboard)

#         caption = f"{selected_cabin['description']}\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Ü–µ–Ω—É –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –í–∞—Å –∏–∑–¥–µ–ª–∏–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏:"
        
#         # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ
#         await query.edit_message_caption(caption=caption, reply_markup=reply_markup)

#         context.user_data['state'] = 'CABIN_DETAILS'
#     else:
#         await context.bot.send_message(chat_id=update.effective_chat.id, text="–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –±—ã—Ç–æ–≤–∫—É –∑–∞–Ω–æ–≤–æ.")
#         context.user_data['state'] = 'CHOOSE_ACTION'

#     return
async def cabin_details(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    selected_cabin_id = query.data.split('_')[1]
    cabins = get_available_cabins()
    selected_cabin = next((c for c in cabins if str(c['id']) == selected_cabin_id), None)

    if selected_cabin:
        # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –∫—Ä–æ–º–µ —Ç–µ–∫—É—â–µ–≥–æ
        for msg_id in context.user_data.get('cabin_messages', []):
            if msg_id != query.message.message_id:  # –ù–µ —É–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=msg_id)
        context.user_data['cabin_messages'] = []  # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π

        keyboard = [
            [InlineKeyboardButton("üì≤ –°–≤—è–∑–∞—Ç—å—Å—è –≤ Telegram", url="https://t.me/ivanov1111")],
            [InlineKeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è –≤ WhatsApp", url="https://api.whatsapp.com/send?phone=79111781781")],
            [InlineKeyboardButton("üåê –ü–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à —Å–∞–π—Ç", url="https://www.bytovki-1.ru/")],
            [InlineKeyboardButton("üîµ –ü–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤ VK", url="https://vk.com/public210580591")],
            [InlineKeyboardButton("üìû –ó–∞–∫–∞–∑–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫", callback_data='contact')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        caption = f"{selected_cabin['description']}\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Ü–µ–Ω—É –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –í–∞—Å –∏–∑–¥–µ–ª–∏–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏:"
        await query.edit_message_caption(caption=caption, reply_markup=reply_markup)

        context.user_data['state'] = 'CABIN_DETAILS'
    else:
        await context.bot.send_message(chat_id=update.effective_chat.id, text="–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –±—ã—Ç–æ–≤–∫—É –∑–∞–Ω–æ–≤–æ.")
        context.user_data['state'] = 'CHOOSE_ACTION'

    return




def setup_conversation() -> ConversationHandler:
    logger.info("–§—É–Ω–∫—Ü–∏—è setup_conversation –≤—ã–∑–≤–∞–Ω–∞")
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            CHOOSE_ACTION: [CallbackQueryHandler(show_cabins, pattern='^show_cabin$')],
            SELECT_CABIN: [CallbackQueryHandler(cabin_details, pattern='^select_')],
            CONFIRM_SELECTION: [CallbackQueryHandler(confirm_cabin_selection, pattern='^confirm_')]
        },
        fallbacks=[CommandHandler('start', start)]
    )
    return conv_handler

